@page "/"
@inject IMovieService MovieService

<PageTitle>Index</PageTitle>

<Modal @ref="modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Kaartjes bestellen</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <OrderTickets></OrderTickets>
        </ModalBody>
    </ModalContent>
</Modal>

<div class="container d-flex align-items-center justify-content-center position-relative flex-wrap">

    @foreach (var movie in movies.Select((value, i) => new { i, value }))
    {
        <div class="card d-flex position-relative flex-column">
            <div class='imgContainer'>
                <img src="img/The-Lord-Of-The-Rings-The-Fellowship-Of-The-Ring.jpg">
            </div>
            <h4>@movie.value</h4>
            <Button Color="Color.Primary" Clicked="@ShowModal">Kaartjes bestellen</Button>
            <a href="/MovieDetails"><button class="btn btn-primary">Meer informatie</button></a>
            <div class="content">
                <p>@description[movie.i]</p>
                <p>@Films</p>
            </div>
        </div>
    }
</div>



@code {

    private string? _image;
    private bool HideImage { get; set; } = false;
    private int _num = 0;
    private string? _imageText;

    private void HideImageHandler()
    {
        HideImage = !HideImage;
    }
    
    public IEnumerable<MovieReadDTO>? Films { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Films = await MovieService.GetMovies();
    }
    

    List<string> movies = new List<string>
    {
            "Movie 1",
            "Movie 2",
            "Movie 3"
        };

    List<string> description = new List<string>
    {
            "Dit is de omschijving",
            "Dit is de omschijving",
            "Dit is de omschijving"
        };

    private Modal modalRef;

    private Task ShowModal()
    {
        return modalRef.Show();
    }

    private Task HideModal()
    {
        return modalRef.Hide();
    }
}
