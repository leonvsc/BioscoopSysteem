@page "/"
@inject IMovieService MovieService
@using BioscoopSysteemWeb.Service
@using BioscoopSysteemWeb.Service.LanguageService;
@using Microsoft.Extensions.Localization;
@inject GetTicketInfoService GetTicketInfoService
@inject IStringLocalizer<Index> Localizer
@inject BiosLanguageNotifier BiosLanguageNotifier
@implements IDisposable


<h3>@Localizer["Language"]</h3>
<LanguageSelector />

<PageTitle>Index</PageTitle>

<Modal @ref="modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>@Localizer["Order Tickets"]</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <OrderTickets></OrderTickets>
        </ModalBody>
    </ModalContent>
</Modal>




@if (Films == null)
{
    <h3>@Localizer["Movies are loading"]</h3>
}
else
{


    <div class="container d-flex align-items-center justify-content-center position-relative flex-wrap">

        @foreach (var movie in Films)
        {
            <div class="card d-flex position-relative flex-column">
                <div class='imgContainer'>
                    <img src="@movie.ImageUrl">
                </div>
                <h4>@movie.Name</h4>
                @* <Button Color="Color.Primary" Clicked="@ShowModal">Kaartjes bestellen</Button> *@
                <button class="btn btn-primary" @onclick="() => ShowModal(movie.MovieId)">Kaartjes bestellen</button>
                <a href="/MovieDetails"><button class="btn btn-primary" @onclick="() => GetTicketInfoService.SetMovieId(movie.MovieId)">Meer informatie</button></a>
                @* <a href="/MovieDetails"><Button Color="Color.Primary" Clicked="@SetMovieId(movie.MovieId)">Kaartjes bestellen</Button></a> *@
                <div class="content">
                    <p><strong>@Localizer["Description"]: </strong>@movie.Description</p>
                    <p><strong>@Localizer["Price"]: </strong>@movie.Price</p>
                    <p><strong>@Localizer["Age"]: </strong>@movie.AllowedAge</p>
                </div>
            </div>
        }
    </div>
}



@code {

    protected override void OnInitialized() => BiosLanguageNotifier.SubscribeLanguageChange(this);
    public void Dispose() => BiosLanguageNotifier.UnsubscribeLanguageChange(this);

    public IEnumerable<MovieReadDTO>? Films { get; set; }
    private Modal modalRef;

    // private void SetMovieId(int movieId)
    // {
    //     GetTicketInfoService.SetMovieId(movieId);
    // }

    protected override async Task OnInitializedAsync()
    {
        Films = await MovieService.GetMovies();
    }
    
    private Task ShowModal(int movieId)
    {
        GetTicketInfoService.SetMovieId(movieId);
        return modalRef.Show();
    }

    private Task HideModal()
    {
        return modalRef.Hide();
    }
}
