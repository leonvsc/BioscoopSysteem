@page "/OrderTickets"
@using BioscoopSysteemWeb.Service
@using BioscoopSysteemWeb.Models
@using System.Web
@using System.Text.Json
@inject GetTicketInfoService GetTicketInfoService
@inject NavigationManager NavigationManager

<PageTitle>Bestellen</PageTitle>

<h1>Kaartjes bestellen</h1>

<p>Hier kunnen de kaartjes besteld worden</p>
<EditForm Model="Reservation" OnValidSubmit="HandleValidSubmit" OnInitialized="Initialize">
    <div class="form-group">
        <label for="ticket-count">Aantal tickets:</label>
        <input id="ticket-count" name="AantalTickets" class="form-control" @bind="@Reservation.TicketAmount" />
        <ValidationMessage For="@(() => Reservation.TicketAmount)" />
    </div>

    <div class="form-group">
        <label for="age">Leeftijd:</label>
        <select id="age" class="form-control" @bind="@Reservation.Age">
            <option value="">Maak keuze</option>
            <option value="t/m 11">t/m 11</option>
            <option value="12 t/m 65">12 t/m 65</option>
            <option value="65 +">65 +</option>
        </select>
        <ValidationMessage For="@(() => Reservation.Age)" />
    </div>

    <Check TValue="bool" @bind-Checked="@Reservation.IsStudent">Student?</Check>
    <Check TValue="bool" @bind-Checked="@Reservation.WantsPopcorn">Popcorn arrangement?</Check>
    <Check TValue="bool" @bind-Checked="@Reservation.WantsVIP">VIP arrangement?</Check>
    <Check TValue="bool" @bind-Checked="@Reservation.WantsKinderfeestje">Kinderfeestje arrangement?</Check>
    

    <br/>
    <label class="form-check-label" for="totalPrice"><strong>Totaal:</strong></label>
    <input class="form-control" type="text" id="totalPrice" placeholder="â‚¬ @CalculatePrice()" readonly>
    <br/>
    <button type="submit" class="btn btn-primary">Betalen</button>
    
    <h1>MovieId = @MovieId</h1>
</EditForm>

@code {
    private ReservationModel Reservation = new ReservationModel();
    
    private int MovieId { get; set; }
    
    protected override void OnInitialized()
    {
        MovieId = GetTicketInfoService.GetMovieId();
    }
    
    private double CalculatePrice()
    {
            double price = 0;
            int movieTime = 130;
            DayOfWeek dag = DayOfWeek.Monday;

            if (movieTime > 120)
            {
                price = 9;
            }

            if (dag is DayOfWeek.Monday or DayOfWeek.Tuesday or DayOfWeek.Wednesday or DayOfWeek.Thursday)
            {
                if (Reservation.IsStudent || Reservation.Age == "t/m 11" || Reservation.Age == "65 +")
                {
                    price = price - 1.5;
                }
            }

            if (Reservation.WantsPopcorn)
            {
                price = price + 4.5;
            }

            double totalprice = price * Reservation.TicketAmount;

            return totalprice;
    }

    private async Task PayMollie(string reservationId)
    {
        var httpClient = new HttpClient();
        httpClient.DefaultRequestHeaders.TryAddWithoutValidation("Content-Type", "application/json");

        var mollieAmount = new PaymentRequestModel { Amount = Convert.ToDecimal(CalculatePrice()), ReservertionId = reservationId};
        
        var response = await httpClient.PostAsJsonAsync("http://localhost:5059/api/payments/payWithMollie", mollieAmount);
        
        var paymentLink = await response.Content.ReadAsStringAsync();
        var mollieUrl = paymentLink.Trim('"');
        mollieUrl = HttpUtility.UrlDecode(mollieUrl);
        NavigationManager.NavigateTo(mollieUrl);
    }

    private async Task<int> AddReservation()
    {
        var httpClient = new HttpClient();

        var addReservation = new ReservationModel
        {
            DateTime = DateTime.Now,
            Location = "Haarlem",
            TicketAmount = Reservation.TicketAmount,
            Age = Reservation.Age,
            IsStudent = Reservation.IsStudent,
            WantsPopcorn = Reservation.WantsPopcorn,
            WantsVIP = Reservation.WantsVIP,
            WantsKinderfeestje = Reservation.WantsKinderfeestje,
            TotalPrice = CalculatePrice(),
            SeatId = 6,
            MovieId = MovieId,
            VisitorId = 1
        };
        
        var response = await httpClient.PostAsJsonAsync("http://localhost:5059/api/reservations", addReservation);
        response.EnsureSuccessStatusCode();
        
        string responseContent = await response.Content.ReadAsStringAsync();
        var reservationId = JsonSerializer.Deserialize<int>(responseContent);
        
        return reservationId;
    }
    
    private async void HandleValidSubmit()
    {
        var reservation = await AddReservation();
        await PayMollie(reservation.ToString());
    }
}