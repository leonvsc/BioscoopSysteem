@page "/OrderTickets"
@using BioscoopSysteemWeb.Service
@using BioscoopSysteemWeb.Models
@using System.Web
@inject GetTicketInfoService GetTicketInfoService
@inject NavigationManager NavigationManager

<PageTitle>Bestellen</PageTitle>

<h1>Kaartjes bestellen</h1>

<p>Hier kunnen de kaartjes besteld worden</p>
<EditForm Model="Reservation" OnValidSubmit="HandleValidSubmit" OnInitialized="Initialize">
    <div class="form-group">
        <label for="ticket-count">Aantal tickets:</label>
        <input id="ticket-count" name="AantalTickets" class="form-control" @bind="@Reservation.TicketCount" />
        <ValidationMessage For="@(() => Reservation.TicketCount)" />
    </div>

    <div class="form-group">
        <label for="age">Leeftijd:</label>
        <select id="age" class="form-control" @bind="@Reservation.Age">
            <option value="">Maak keuze</option>
            <option value="t/m 11">t/m 11</option>
            <option value="12 t/m 65">12 t/m 65</option>
            <option value="65 +">65 +</option>
        </select>
        <ValidationMessage For="@(() => Reservation.Age)" />
    </div>

    <Check TValue="bool" @bind-Checked="@Reservation.IsStudent">Student?</Check>
    <Check TValue="bool" @bind-Checked="@Reservation.Is3D">3D?</Check>
    <Check TValue="bool" @bind-Checked="@Reservation.WantsPopcorn">Popcorn arrangement?</Check>

    @if (Reservation.WantsPopcorn)
    {
        <div class="form-group">
            <label for="popcorn-amount">Popcorn amount:</label>
            <input id="popcorn-amount" class="form-control" @bind="@Reservation.PopcornAmount" />
        </div>
    }

    <br/>
    <label class="form-check-label"><strong>Totaal:</strong></label>
    <input class="form-control" type="text" placeholder="â‚¬ @Reservation.TotalPrice" readonly>
    <br/>
    <button type="submit" class="btn btn-primary">Betalen</button>
</EditForm>

@code {
    // private void OnSubmit(int amount, double price, int popcornAmount, string paymentMethod)
    // {
    //     NavigationManager.NavigateTo("/ticket");
    //     GetTicketInfoService.SetTicketAmount(amount);
    //     GetTicketInfoService.SetPopcornAmount(popcornAmount);
    //     GetTicketInfoService.SetTotalPrice(price);
    //     GetTicketInfoService.SetPaymentMethod(paymentMethod);
    // }
    
    private ReservationModel Reservation = new ReservationModel();

    private async Task PayMollie()
    {
        var httpClient = new HttpClient();
        httpClient.DefaultRequestHeaders.TryAddWithoutValidation("Content-Type", "application/json");

        var mollieAmount = new PaymentRequestModel { Amount = Convert.ToDecimal(Reservation.TotalPrice), Description = Reservation.TicketCount.ToString()};

        var response = await httpClient.PostAsJsonAsync("http://localhost:5059/api/payments/payWithMollie", mollieAmount);
        
        var paymentLink = await response.Content.ReadAsStringAsync();
        var mollieUrl = paymentLink.Trim('"');
        mollieUrl = HttpUtility.UrlDecode(mollieUrl);
        NavigationManager.NavigateTo(mollieUrl);
    }
    
    private void HandleValidSubmit()
    {
        PayMollie();
    }
}